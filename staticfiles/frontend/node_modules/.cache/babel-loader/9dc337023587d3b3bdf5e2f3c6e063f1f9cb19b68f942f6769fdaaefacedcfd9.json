{"ast":null,"code":"import { ref } from 'vue';\nimport \"ag-grid-community/styles/ag-grid.css\"; // Mandatory CSS required by the grid\nimport \"ag-grid-community/styles/ag-theme-quartz.css\"; // Optional Theme applied to the grid\nimport { AgGridVue } from \"ag-grid-vue3\"; // Vue Data Grid Component\nimport BaseLayout from \"@/components/BaseLayout.vue\";\nexport default {\n  name: 'OffersComponent',\n  components: {\n    BaseLayout,\n    AgGridVue // Add Vue Data Grid component\n  },\n  data() {\n    // ... your existing data properties ...\n  },\n  computed: {\n    // ... your existing computed properties ...\n  },\n  methods: {\n    // ... your existing methods ...\n  },\n  created() {\n    // ... your existing created lifecycle hook ...\n  },\n  setup() {\n    // Row Data: The data to be displayed.\n    const rowData = ref([{\n      make: \"Tesla\",\n      model: \"Model Y\",\n      price: 64950,\n      electric: true\n    }, {\n      make: \"Ford\",\n      model: \"F-Series\",\n      price: 33850,\n      electric: false\n    }, {\n      make: \"Toyota\",\n      model: \"Corolla\",\n      price: 29600,\n      electric: false\n    }]);\n\n    // Column Definitions: Defines the columns to be displayed.\n    const colDefs = ref([{\n      field: \"make\"\n    }, {\n      field: \"model\"\n    }, {\n      field: \"price\"\n    }, {\n      field: \"electric\"\n    }]);\n    return {\n      rowData,\n      colDefs\n      // ... your existing return properties ...\n    };\n  }\n};","map":{"version":3,"names":["ref","AgGridVue","BaseLayout","name","components","data","computed","methods","created","setup","rowData","make","model","price","electric","colDefs","field"],"sources":["C:\\Users\\Амир\\PycharmProjects\\core\\staticfiles\\frontend\\src\\components\\OffersComponent.vue"],"sourcesContent":["<template>\r\n  <base-layout>\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h1>Offers</h1>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#offerModal\">\r\n        Add Offer\r\n      </button>\r\n    </div>\r\n    <ag-grid-vue\r\n      :rowData=\"rowData\"\r\n      :columnDefs=\"colDefs\"\r\n      style=\"height: 500px\"\r\n      class=\"ag-theme-quartz\"\r\n    >\r\n    </ag-grid-vue>\r\n    <!-- ... rest of your code ... -->\r\n  </base-layout>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport \"ag-grid-community/styles/ag-grid.css\"; // Mandatory CSS required by the grid\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\"; // Optional Theme applied to the grid\r\nimport { AgGridVue } from \"ag-grid-vue3\"; // Vue Data Grid Component\r\nimport BaseLayout from \"@/components/BaseLayout.vue\";\r\n\r\nexport default {\r\n  name: 'OffersComponent',\r\n  components: {\r\n    BaseLayout,\r\n    AgGridVue, // Add Vue Data Grid component\r\n  },\r\n  data() {\r\n    // ... your existing data properties ...\r\n  },\r\n  computed: {\r\n    // ... your existing computed properties ...\r\n  },\r\n  methods: {\r\n    // ... your existing methods ...\r\n  },\r\n  created() {\r\n    // ... your existing created lifecycle hook ...\r\n  },\r\n  setup() {\r\n    // Row Data: The data to be displayed.\r\n    const rowData = ref([\r\n      { make: \"Tesla\", model: \"Model Y\", price: 64950, electric: true },\r\n      { make: \"Ford\", model: \"F-Series\", price: 33850, electric: false },\r\n      { make: \"Toyota\", model: \"Corolla\", price: 29600, electric: false },\r\n    ]);\r\n\r\n    // Column Definitions: Defines the columns to be displayed.\r\n    const colDefs = ref([\r\n      { field: \"make\" },\r\n      { field: \"model\" },\r\n      { field: \"price\" },\r\n      { field: \"electric\" }\r\n    ]);\r\n\r\n    return {\r\n      rowData,\r\n      colDefs,\r\n      // ... your existing return properties ...\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  /* ... your existing styles ... */\r\n</style>"],"mappings":"AAoBA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAO,sCAAsC,EAAE;AAC/C,OAAO,8CAA8C,EAAE;AACvD,SAASC,SAAQ,QAAS,cAAc,EAAE;AAC1C,OAAOC,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVF,UAAU;IACVD,SAAS,CAAE;EACb,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL;EAAA,CACD;EACDC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,OAAO,EAAE;IACP;EAAA,CACD;EACDC,OAAOA,CAAA,EAAG;IACR;EAAA,CACD;EACDC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,OAAM,GAAIV,GAAG,CAAC,CAClB;MAAEW,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACjE;MAAEH,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAClE;MAAEH,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAM,CAAC,CACpE,CAAC;;IAEF;IACA,MAAMC,OAAM,GAAIf,GAAG,CAAC,CAClB;MAAEgB,KAAK,EAAE;IAAO,CAAC,EACjB;MAAEA,KAAK,EAAE;IAAQ,CAAC,EAClB;MAAEA,KAAK,EAAE;IAAQ,CAAC,EAClB;MAAEA,KAAK,EAAE;IAAW,EACrB,CAAC;IAEF,OAAO;MACLN,OAAO;MACPK;MACA;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}