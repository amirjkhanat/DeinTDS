{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b0b9a7b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"d-flex justify-content-between align-items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Offers\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-primary\",\n  \"data-bs-toggle\": \"modal\",\n  \"data-bs-target\": \"#offerModal\"\n}, \" Add Offer \")], -1 /* HOISTED */));\nexport function render(_ctx, _cache) {\n  const _component_vue_good_table = _resolveComponent(\"vue-good-table\");\n  const _component_base_layout = _resolveComponent(\"base-layout\");\n  return _openBlock(), _createBlock(_component_base_layout, null, {\n    default: _withCtx(() => [_hoisted_1, _createVNode(_component_vue_good_table, {\n      columns: _ctx.columns,\n      rows: _ctx.offers,\n      defaultSortBy: {\n        field: 'id',\n        type: 'asc'\n      },\n      lineNumbers: true\n    }, null, 8 /* PROPS */, [\"columns\", \"rows\"]), _createCommentVNode(\" ... \")]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","type","_createBlock","_component_base_layout","default","_withCtx","_hoisted_1","_createVNode","_component_vue_good_table","columns","_ctx","rows","offers","defaultSortBy","field","lineNumbers","_createCommentVNode","_"],"sources":["C:\\Users\\Амир\\PycharmProjects\\core\\static\\frontend\\src\\components\\OffersComponent.vue"],"sourcesContent":["<template>\r\n  <base-layout>\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h1>Offers</h1>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#offerModal\">\r\n        Add Offer\r\n      </button>\r\n    </div>\r\n    <vue-good-table\r\n      :columns=\"columns\"\r\n      :rows=\"offers\"\r\n      :defaultSortBy=\"{field: 'id', type: 'asc'}\"\r\n      :lineNumbers=\"true\">\r\n    </vue-good-table>\r\n    <!-- ... -->\r\n  </base-layout>\r\n</template>\r\n\r\n<script>\r\nimport BaseLayout from \"@/components/BaseLayout.vue\";\r\nimport { VueGoodTable } from 'vue-good-table';\r\n\r\nexport default {\r\n  name: 'OffersComponent',\r\n  components: {\r\n    BaseLayout,\r\n    VueGoodTable\r\n  },\r\n  data() {\r\n    return {\r\n      offers: [],\r\n      partnerPrograms: [],\r\n      campaigns: [],\r\n      newOffer: {\r\n        name: '',\r\n        offerType: 'html_file',\r\n        partnerProgram: '',\r\n        htmlFile: null,\r\n        redirectUrl: '',\r\n        preloadUrl: '',\r\n        actionType: '',\r\n        campaign: null\r\n      },\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sortable: true,\r\n          width: '100px',\r\n          resizable: true\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n          sortable: true,\r\n          resizable: true\r\n        },\r\n        {\r\n          label: 'Offer Type',\r\n          field: 'offer_type',\r\n          sortable: true,\r\n          resizable: true\r\n        },\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n          resizable: true\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    fetchOffers() {\r\n      fetch('http://127.0.0.1/admin/api/offers/', {\r\n        headers: {\r\n          'X-Requested-With': 'XMLHttpRequest'\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.offers = data;\r\n      });\r\n    },\r\n    fetchPartnerPrograms() {\r\n      fetch('http://127.0.0.1/admin/api/partner-programs/', {\r\n        headers: {\r\n        [...]\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.partnerPrograms = data;\r\n      });\r\n    },\r\n    fetchCampaigns() {\r\n      // Here you will fetch the campaigns from your API when it's ready\r\n      // For now, you can use dummy data\r\n      this.campaigns = [\r\n        { id: 1, name: 'Campaign 1' },\r\n        [...]\r\n        // ...\r\n      ];\r\n    },\r\n    submitForm() {\r\n      this.offers.push(this.newOffer);\r\n      this.newOffer = {\r\n      [...]\r\n    },\r\n    handleOfferTypeChange() {\r\n      this.newOffer.htmlFile = this.newOffer.offerType === 'html_file' ? '' : null;\r\n      this.newOffer.redirectUrl = this.newOffer.offerType === 'redirect' ? '' : null;\r\n      this.newOffer.preloadUrl = this.newOffer.offerType === 'preload' ? '' : null;\r\n      this.newOffer.actionType = this.newOffer.offerType === 'action' ? '' : null;\r\n    },\r\n    handleActionTypeChange() {\r\n      this.newOffer.campaign = this.newOffer.actionType === 'redirect' ? '' : null;\r\n    },\r\n    handleFileUpload(event) {\r\n      this.newOffer.htmlFile = event.target.files[0];\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchOffers();\r\n    this.fetchPartnerPrograms();\r\n    this.fetchCampaigns();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your CSS styles here */\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAKM;EALDC,KAAK,EAAC;AAAmD,I,aAC5DD,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAES;EAFDE,IAAI,EAAC,QAAQ;EAACD,KAAK,EAAC,iBAAiB;EAAC,gBAAc,EAAC,OAAO;EAAC,gBAAc,EAAC;GAAc,aAElG,E;;;;uBALJE,YAAA,CAccC,sBAAA;IAfhBC,OAAA,EAAAC,QAAA,CAEI,MAKM,CALNC,UAKM,EACNC,YAAA,CAKiBC,yBAAA;MAJdC,OAAO,EAAEC,IAAA,CAAAD,OAAO;MAChBE,IAAI,EAAED,IAAA,CAAAE,MAAM;MACZC,aAAa,EAAE;QAAAC,KAAA;QAAAb,IAAA;MAAA,CAA0B;MACzCc,WAAW,EAAE;kDAEhBC,mBAAA,SAAY,C;IAdhBC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}